@model DiscussionViewModel

<div class="blog-container">
    <div class="page-container text-alegreya-style">
        <div class="blog-content">

            <div class="options-container">

                @await Html.PartialAsync("_OptionsMenuPartial")

                <div id="optionsContent" class="options-content">

                    <form method="post" asp-action="discussion" asp-controller="options" class="usual-form">

                        <fieldset>
                            <legend>Sorting comments</legend>
                            <select asp-for="@Model.CommentsOptions.SortingCommentsDefaultType" asp-items="Html.GetEnumSelectList<SortingComments>()">
                            </select>
                        </fieldset>

                        <fieldset>
                            <legend>Displaying comments</legend>
                            <p class="options-input-container">
                                <input type="checkbox" class="usual-checkbox" asp-for="@Model.CommentsOptions.AllowNesting">
                                <label class="usual-label checkbox-label" asp-for="@Model.CommentsOptions.AllowNesting"></label>
                            </p>

                            <label class="usual-label">
                                Depth of nested comments:
                                @Html.DropDownListFor(d => d.CommentsOptions.Depth.Value,
                                    new SelectList(Model.CommentsOptions.Depth.Available),
                                    "")
                            </label>
                        </fieldset>

                        <fieldset>
                            <legend>Who can write comments</legend>
                            @for (int i = 0; i < Model.DiscussionRoles.Count; i++)
                            {
                                <p class="options-input-container">
                                    <input type="checkbox" class="usual-radiobutton" asp-for="@Model.DiscussionRoles[i].WriteComments">
                                    <label class="usual-label checkbox-label">@Model.DiscussionRoles[i].Type</label>
                                </p>
                            }
                        </fieldset>

                        <fieldset>
                            <legend>Who can moderate comments</legend>
                            @for (int i = 0; i < Model.DiscussionRoles.Count; i++)
                            {
                                if (Model.DiscussionRoles[i].Discriminator.Equals("Role"))
                                    continue;

                                <p class="options-input-container">
                                    <input type="checkbox" class="usual-radiobutton" asp-for="@Model.DiscussionRoles[i].ModerateComments">
                                    <label class="usual-label checkbox-label">@Model.DiscussionRoles[i].Type</label>
                                </p>
                            }

                            <span class="blog-info-span text-alegreya-style"><mark>Note:</mark> If comments are available only to administrators or only to editors and administrators, then only administrators can moderate comments.</span>
                        </fieldset>

                        @for(int i = 0; i < Model.DiscussionRoles.Count; i++)
                        {
                            <input type="hidden" asp-for="@Model.DiscussionRoles[i].Type" value="@((int)Model.DiscussionRoles[i].Type)">
                            <input type="hidden" asp-for="@Model.DiscussionRoles[i].Discriminator" value="@Model.DiscussionRoles[i].Discriminator">
                        }

                        <button type="submit" class="usual-submit-button usual-button">Save</button>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/options_actions/openList.js"></script>
}