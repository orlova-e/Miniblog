@model ListViewModel<Article>

@{
    ViewBag.Page = Model.PageName;

    async Task GetLinksAsync()
    {
        <div class="uk-container uk-margin-bottom">
            <ul class="uk-subnav" uk-margin>
                @{
                    string[] listNames = new[] { "favourites", "bookmarks", "subscriptions", "commented", "drafts" };
                    foreach (string listName in listNames)
                    {
                        string activePage = listName.Equals(Model.PageName, StringComparison.OrdinalIgnoreCase) ? "uk-active" : string.Empty;
                        if (listName is "subscriptions")
                        {
                            <li><a href="@Url.Action("subscriptions", "users")">@listName</a></li>
                        }
                        else
                        {
                            <li class="@activePage"><a href="@Url.Action("index", "home", new { listName = listName})">@listName</a></li>
                        }
                    }
                }
            </ul>
        </div>
    }

    await GetLinksAsync();
}

@if (Model.Entities.Any())
{
    await Html.RenderPartialAsync("Lists", Model);

    @section Scripts {
        <script src="~/js/list/articlesLayout.js"></script>
    }
}
else
{
    ServerMessage serverMessage = new()
    {
        ShowSmile = true,
        MessageText = "No articles here"
    };
    await Html.RenderPartialAsync("_MessagePartial", serverMessage);
}
