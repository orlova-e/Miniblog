@using Domain.Entities
@using Web.Configuration;
@using Web.App.Interfaces

@inject ICommon common

@model Article

@{
    ListOptions listOptions = common.Options.ListOptions;
    ArticleOptions articleOptions = Model.DisplayOptions;

    if (listOptions.OverrideForUserArticle)
    {
        articleOptions = (ArticleOptions)listOptions;
    }
}

<div>
    <div class="uk-card uk-card-default uk-card-hover">
        <div class="uk-card-header">
            <div class="uk-grid-small uk-flex-middle" uk-grid>
                <div class="uk-width-auto">
                    <a class="uk-link" href="#">
                        <avatar user="Model.User" px="40"/>
                    </a>
                </div>
                <div class="uk-width-expand">
                    <h3 class="uk-card-title uk-margin-remove-bottom"><a class="uk-link-heading" href="@Url.Action("Article", "Articles", new { title = Model.Link })">@Model.Header</a></h3>
                    <p class="uk-text-meta uk-margin-remove-top">
                        @if (articleOptions.Username)
                        {
                            if (Model.User is not null)
                            {
                                <a class="uk-link-muted" href="@Url.Action("Account", "Users", new { username = Model.User.Username })">
                                    Author: @Model.User.Username
                                </a>
                            }
                            else
                            {
                                <a class="uk-link-muted" href="#">
                                    Author: <i>was deleted</i>
                                </a>
                            }
                        }

                        @if (articleOptions.DateAndTime)
                        {
                            <a class="uk-link-muted" href="#"><time datetime="@Model.DateTime.ToString("s")">@Model.DateTime.ToString("g")</time></a>
                        }
                    </p>
                </div>
            </div>
        </div>
        @if (Model.Images.Any())
        {
            <div class="uk-card-media-top uk-cover-container">
                <canvas width="200" height="400"></canvas>
                <img src="data:image/@Model.Images[0].FileExtension;base64,@(Convert.ToBase64String(Model.Images[0].File))" alt="preview" uk-img uk-cover>
            </div>
        }
        <div class="uk-card-body">
            @{
                string[] words = Model.Text.Split(new string[] { " ", Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);
                int count = words.Length < 30 ? words.Length : 30;
                string previewText = string.Join(" ", words, 0, count);
                <p>@previewText</p>}
        <div class="uk-text-meta uk-margin-remove-top">
            @if (articleOptions.Topic)
            {
                string topicUrl = "#";
                if (!string.IsNullOrWhiteSpace(Model.Topic?.Name))
                    topicUrl = Url.Action("topic", "home", new { name = Model.Topic.Name });
                <a class="uk-link-muted" href="@topicUrl"><span uk-icon="chevron-double-right"></span>@(Model.Topic?.Name ?? "no topic")</a>
            }
            @if (articleOptions.Series)
            {
                string seriesUrl = "#";
                if (!string.IsNullOrWhiteSpace(Model.Series?.Name))
                    seriesUrl = Url.Action("serieswith", "home", new { name = Model.Series.Name });
                <a class="uk-link-muted" href="@seriesUrl"><span uk-icon="folder"></span> @(Model.Series?.Name ?? "no series")</a>
            }
            @if (articleOptions.Tags)
            {
                List<string> tags = Model.ArticleTags.Select(t => t.Tag).Select(t => t.Name).ToList();
                int counter = tags.Count <= 5 ? tags.Count : 5;
                for (int i = 0; i < counter; i++)
                {
                    <a class="uk-link-muted" href="#"><span uk-icon="hashtag"></span>@tags[i]</a>
                }
            }
            <br>
            <br>
            @if (articleOptions.Likes)
            {
                <span uk-icon="heart"></span> <span>@Model.Likes.Count</span>
            }
            @if (articleOptions.Bookmarks)
            {
                <span uk-icon="bookmark"></span> <span>@Model.Bookmarks.Count</span>
            }
            @if (articleOptions.Comments)
            {
                <span uk-icon="comments"></span> <span>@Model.Comments.Count</span>
            }
        </div>
        </div>
        <div class="uk-card-footer">
            <a href="@Url.Action("Article", "Articles", new { title = Model.Link })" class="uk-button uk-button-text">Read more</a>
        </div>
    </div>
</div>