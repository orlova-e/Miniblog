@using Web.ViewModels

@{
    ArticleReadViewModel articleReadModel = ViewBag.ArticleReadModel;
    CommentsViewModel commentsViewModel = ViewBag.CommentsViewModel;
    await Html.RenderPartialAsync("_ArticlePartial", articleReadModel);
    await Html.RenderPartialAsync("_CommentsPartial", commentsViewModel);
    await Html.RenderPartialAsync("_CommentTemplatePartial", articleReadModel.User);
}

<template id="anonymousUserImgTemplate">
    <img name="avatar" src="@Url.Content("~/img/social_line/anonymous_user.png")" alt="User">
</template>

@if (User.Identity.IsAuthenticated && articleReadModel.User.Avatar != null)
{
    <template id="userImgTemplate">
        <img name="avatar" src="data:image/jpeg;base64,@(Convert.ToBase64String(articleReadModel.User.Avatar))" alt="@articleReadModel.User.Username">
    </template>
}

@if (User.Identity.IsAuthenticated && (bool)articleReadModel.User.Role?.WriteComments)
{
    <template id="commentResponseForm">
        <div class="template-comment-answer comment-answer">
            <div class="user-info-container">
                @if (articleReadModel.User.Avatar != null)
                {
                    <img src="data:image/jpeg;base64,@(Convert.ToBase64String(articleReadModel.User.Avatar))" alt="@articleReadModel.User.Username">
                }
                else
                {
                    <img src="@Url.Content("~/img/social_line/anonymous_user.png")" alt="User">
                }
            </div>
            <form class="answer-form comment-form">
                <div>
                    <textarea placeholder="Add comment..." class="comment-input comment-input-textarea"></textarea>
                    <span class="text-sans-style"></span>
                </div>
                <div class="update-comment-actions text-sans-style">
                    <button type="button" onclick="sendComment(this)" class="usual-button comment-button">Add</button>
                    <button type="button" onclick="removeReplyCommentForm(this)" class="usual-button usual-button-reverse comment-button">Cancel</button>
                </div>
            </form>
        </div>
    </template>

    <template id="commentChangeForm">
        <form class="answer-form comment-form comment-update-form">
            <div>
                <textarea class="comment-input comment-input-textarea"></textarea>
                <span class="text-sans-style"></span>
            </div>
            <div class="update-comment-actions text-sans-style">
                <button type="button" onclick="sendCommentUpdates(this)" class="usual-button comment-button">Update</button>
                <button type="button" onclick="removeUpdateCommentForm(this)" class="usual-button usual-button-reverse comment-button">Cancel</button>
            </div>
        </form>
    </template>
}

@section Scripts {
    <script src="~/js/scrollFunction.js"></script>
    @if (articleReadModel.Article.DisplayOptions.Comments && User.Identity.IsAuthenticated && articleReadModel.User.Role.WriteComments)
    {
        <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

        <script src="~/js/article/comment/add.js"></script>
        <script src="~/js/article/comment/create.js"></script>
        <script src="~/js/article/comment/update.js"></script>
        <script src="~/js/article/comment/replace.js"></script>
        <script src="~/js/article/comment/delete.js"></script>
        <script src="~/js/article/comment/getForm.js"></script>
        <script src="~/js/article/comment/insertDate.js"></script>
        <script src="~/js/article/comment/like.js"></script>
        <script src="~/js/article/comment/send.js"></script>
        <script src="~/js/article/comment/sort.js"></script>

        <script src="~/js/article/articleActions.js"></script>
        <script src="~/js/article/updateInfo.js"></script>
        <script src="~/js/article/events.js"></script>
        <script src="~/js/article/articleHub.js"></script>
    }
}

@section ProgressBar {
    <div class="read-progress-bar-container" id="read-bar-container">
        <div class="read-progress">
            <div class="read-progress-bar" id="readBar"></div>
        </div>
    </div>
}

@if (articleReadModel.Article.DisplayOptions.Comments && User.Identity.IsAuthenticated && articleReadModel.User.Role.WriteComments)
{
    @section Validation {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"
                asp-fallback-src="~/lib/jquery-validate/jquery.validate.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"
                asp-fallback-src="~/lib/jquery-validation-unobtrusive/query.validate.unobtrusive.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator && window.jQuery.validator.unobtrusive"></script>
    }
}