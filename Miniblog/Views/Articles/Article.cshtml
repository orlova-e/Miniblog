@*@using System.Security.Claims*@
@using Miniblog.Models.Entities
@*@using Miniblog.Models.Entities.Enums*@
@*@using Miniblog.Models.Services.Interfaces*@
@using Miniblog.ViewModels

@model Article

@{
    User user = ViewBag.CurrentUser;
    Article article = ViewBag.Article;

    ArticleReadViewModel articleReadView = new ArticleReadViewModel() { Article = article, CurrentUser = user };
}


<div class="blog-container article-page-container">

    @await Html.PartialAsync("_ArticlePartial", articleReadView)

</div>

<section class="article-comments text-sans-style">

    <div class="article-comments">

        <div class="comment-appeal text-alegreya-style">
            @if (!article.DisplayOptions.Comments)
            {
                <h3>Comments are hidden by author</h3>
            }
            else if (!User.Identity.IsAuthenticated)
            {
                <h3><a href="@Url.Action("signin", "account")">Sign In</a> to leave a comment</h3>
            }
            else if (User.Identity.IsAuthenticated && user.Role.WriteComments)
            {
                <h3>Comment</h3>
            }
        </div>

        @if (User.Identity.IsAuthenticated && user.Role.WriteComments)
        {
            <div class="root-comment-answer comment-answer">

                <div class="user-info-container">
                    @if (user.Avatar != null)
                    {
                        <img src="data:image/jpeg;base64,@(Convert.ToBase64String(user.Avatar))" alt="User">
                    }
                    else
                    {
                        <img src="@Url.Content("~/img/social_line/anonymous_user.png")" alt="User">
                    }
                </div>

                <form asp-action="add" asp-controller="comments" method="post" class="root-answer-form comment-form">
                    <input type="hidden" asp-for="@user.Username" value="@user.Username">
                    <div>
                        @{
                            CommentViewModel commentViewModel = new CommentViewModel();
                        }
                        <textarea placeholder="Add comment..." class="comment-input comment-input-textarea" asp-for="@commentViewModel.Text"></textarea>
                        <span style="display: none;" class="text-sans-style" asp-validation-for="@commentViewModel.Text"></span>
                    </div>

                    <button type="button" onclick="addRootComment(this)" class="usual-submit-button comment-button">Add comment</button>
                </form>

            </div>
        }
    </div>

    @{
        ViewData["Depth"] = 7;
        ViewData["CanWrite"] = (bool)(user?.Role?.WriteComments ?? false);
        ViewData["Comments"] = article.Comments;
    }

    @await Html.PartialAsync("_CommentsPartial"@*, ViewData*@)

</section>

@section CommentTemplates {
    @* * HTML Templates *@
    @if (User.Identity.IsAuthenticated && (bool)user.Role?.WriteComments)
    {
        <!-- ? HTML comment-answer FORM -->
        <!-- TODO: RAZOR: switch IMG SOURCE in TEMPLATE -->
        <template id="template-comment-answer">
            <div class="template-comment-answer comment-answer">

                <div class="user-info-container">
                    @if (user.Avatar != null)
                    {
                        <img src="img/users/35FPa7SRJoI.jpg" alt="User">
                    }
                    else
                    {
                        <img src="img/users/35FPa7SRJoI.jpg" alt="User">
                    }
                </div>

                <form asp-action="add" asp-controller="comments" method="post" class="root-answer-form comment-form">
                    <input type="hidden" asp-for="@user.Username" value="@user.Username">
                    <div>
                        @{
                            CommentViewModel commentViewModel = new CommentViewModel();
                        }
                        <textarea placeholder="Add comment..." class="comment-input comment-input-textarea" asp-for="@commentViewModel.Text"></textarea>
                        <span style="display: none;" class="text-sans-style" asp-validation-for="@commentViewModel.Text"></span>
                    </div>

                    <button type="button" onclick="addRootComment(this)" class="usual-submit-button comment-button">Add comment</button>
                </form>

            </div>
        </template>
    }

    @*? HTML blog-comment template
        TODO: RAZOR: switch IMG SOURCE in TEMPLATE*@
    <template id="template-blog-comment">
        <div class="template-blog-comment blog-comment"
             data-comment-id=""
             data-parent-id="">

            <div class="user-info-container">
                <!-- TODO: PUT user or anonymous user img -->
                <img src="img/users/35FPa7SRJoI.jpg" alt="User">
            </div>

            <div class="text-comment-container clearfix">

                <div class="blog-comment-meta">
                    <a class="comment-username" href="#">

                    </a>
                    <span class="comment-time-info"></span>
                </div>

                <div class="comment-container">

                </div>

                <div class="comment-actions-container">

                    <div class="hearts">
                        @{
                            string userLikeClick = string.Empty;
                            if (User.Identity.IsAuthenticated)
                            {
                                userLikeClick = "onclick=\"heartClick(this)\"";
                            }
                        }
                        <button type="button" class="heart-not-clicked" @userLikeClick>
                            <img src="/img/buttons/heart.png" alt="like">
                        </button>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="button" onclick="heartClick(this)" class="heart-clicked">
                                <img src="/img/buttons/heart red.png" alt="like">
                            </button>
                        }

                        <span class="hearts-counter text-sans-style comment-hearts-count">0</span>
                    </div>

                    @if (User.Identity.IsAuthenticated && (bool)user.Role?.WriteComments)
                    {
                        <div class="comment-reply">
                            <button type="button" onclick="replyComment(this)" class="reply-button">
                                <img src="/img/buttons/next.png" alt="reply">
                            </button>
                        </div>
                    }
                </div>

                <!-- comment answer -->
                <div class="users-comment-answer-collection">

                </div>
            </div>

        </div>
    </template>

}

@section Scripts {
    <script src="~/js/scrollFunction.js"></script>

    @if (article.DisplayOptions.Comments && User.Identity.IsAuthenticated && user.Role.WriteComments)
    {
        <script src="~/js/comment_actions/likeActions.js"></script>
        <script src="~/js/comment_actions/replyComment.js"></script>
        <script src="~/js/comment_actions/addComment.js"></script>
        <script src="~/js/comment_actions/addRootComment.js"></script>
    }
}

@section ProgressBar {
    <div class="read-progress-bar-container" id="read-bar-container">
        <div class="read-progress">
            <div class="read-progress-bar" id="readBar"></div>
        </div>
    </div>
}

@if (article.DisplayOptions.Comments && User.Identity.IsAuthenticated && user.Role.WriteComments)
{
    @section Validation {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"
                asp-fallback-src="~/lib/jquery-validate/jquery.validate.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"
                asp-fallback-src="~/lib/jquery-validation-unobtrusive/query.validate.unobtrusive.min.js"
                asp-fallback-test="window.jQuery && window.jQuery.validator && window.jQuery.validator.unobtrusive"></script>
    }
}