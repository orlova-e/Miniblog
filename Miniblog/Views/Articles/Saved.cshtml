@model ListViewModel<Article>

@{
    async Task GetLinksAsync()
    {
        <div class="uk-container uk-margin-bottom">
            <ul class="uk-subnav" uk-margin>
                @{
                    string[] links = new[] { "favourites", "bookmarks", "commented", "drafts" };
                    foreach (string listName in links)
                    {
                        string controller = listName.Equals("account", StringComparison.OrdinalIgnoreCase) ? "users" : "articles";
                        string activePage = string.Empty;
                        if (listName.Equals(Model.PageName))
                            activePage = "uk-active";

                        <li class="@activePage"><a href="@Url.Action("lists", controller, new { listName = listName})">@listName</a></li>
                    }
                }
            </ul>
        </div>
    }

    await GetLinksAsync();
}

@if (Model.Entities.Any())
{
    await Html.RenderPartialAsync("~/Views/Articles/Lists.cshtml", Model);

    @section Scripts {
        <script src="~/js/list/articlesLayout.js"></script>
    }
}
else
{
    ServerMessage serverMessage = new()
    {
        ShowSmile = true,
        MessageText = "No articles here"
    };
    await Html.RenderPartialAsync("~/Views/Shared/_MessagePartial.cshtml", serverMessage);
}
