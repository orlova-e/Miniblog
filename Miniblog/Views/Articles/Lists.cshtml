@using Domain.Entities.Enums
@using Services.Interfaces

@inject IUserService userService

@model ListViewModel

@{
    Role role = null;
    if (User.Identity.IsAuthenticated)
    {
        role = userService.FindByName(User.Identity.Name).Role;
    }
}

@if (!Model.Articles.Any())
{
    ServerMessage serverMessage = new()
    {
        ShowSmile = true,
        MessageText = "There is no articles yet"
    };
    await Html.RenderPartialAsync("_MessagePartial", serverMessage);
    if (Model.PageName is "default" && (role?.WriteArticles ?? false))
    {
        <div class="uk-align-center uk-text-center">
            <a class="uk-button uk-button-secondary" href="@Url.Action("add", "articles")">Add new</a>
        </div>
    }
}
else
{
    await Html.RenderPartialAsync("~/Views/Articles/_ListParametersPartial.cshtml", Model);

    <div class="uk-container uk-margin">
        <div id="articlesContainer" uk-grid="masonry: true" class="uk-grid-medium uk-child-width-1-1@m">
            @foreach (Article article in Model.Articles)
            {
                await Html.RenderPartialAsync("~/Views/Articles/_PreviewArticlePartial.cshtml", article);
            }
        </div>
    </div>

    string previous = Url.Action(Model.PageName.ToLower(), "articles", new
    {
        page = Model.Current - 1,
        sortby = Enum.GetName(typeof(ListSorting), Model.ListSorting).ToLower()
    });
    string next = Url.Action(Model.PageName.ToLower(), "articles", new
    {
        page = Model.Current + 1,
        sortby = Enum.GetName(typeof(ListSorting), Model.ListSorting).ToLower()
    });

    @if (Model.HasPrevious || Model.HasNext)
    {
        <div class="uk-flex-center uk-margin" uk-grid>
            <div>
                <ul class="uk-pagination">
                    @if (Model.HasPrevious)
                    {
                        <li><a href="@previous"><span class="uk-margin-small-right" uk-pagination-previous></span> Previous</a></li>
                    }
                    @if (Model.HasNext)
                    {
                        <li class="uk-margin-auto-left"><a href="@next">Next <span class="uk-margin-small-left" uk-pagination-next></span></a></li>
                    }
                </ul>
            </div>
        </div>
    }

    @section Scripts {
        @await Html.PartialAsync("_ListScripts")
    }
}
